---
title: Actions and filteres
active_menu: Actions and filteres
main_menu: dev
---

<h1>Actions and filters</h1>
<h2>Smart_load_module</h2>
<p>
<em>Action</em></p>
<p>This action is used for lazy loading. It's called when <code>Smart</code> module loaded. You can use <code>SmartUtils::loadModules</code> in this action.</p>
<pre><code class="php">function somefunction(){
    $modulesDir = &quot;path to modules dir here&quot;;
    SmartUtils::loadModules($modulesDir);
}

add_action(&#39;Smart_load_module&#39;, &#39;somefunction&#39;);
</code></pre>

<h2>Smart_modules</h2>
<p>
<em>Filter</em></p>
<p>List of registered modules</p>
<pre><code class="php">$list = apply_filters(&#39;Smart_modules&#39;, array());
</code></pre>

<h2>SmartModule_loaded</h2>
<p>
<em>Action</em></p>
<p>This action is called when some <code>module</code> is loaded.</p>
<pre><code class="php">//Example
//Button module loaded
do_action(&#39;SmartComponentButton_loaded&#39;);
</code></pre>

<h2>Smart_settings_list</h2>
<p>
<em>Filter</em></p>
<p>List of the settings binded to component. It holds 2 parameters: settings list of the filtered component and it's name.
<code>$settings</code> is a filtered parameter, that should be passed on. You can watch an example how to use this filter in the code below:</p>
<pre><code class="php">/**
* Add animation settings if condition equals true
* 
* @param array $settings Filtered parameter. Holds list of the settings for current component.
* @param string $name Name of the current component.
* @return array $settings
*/
function somefunction($settings, $name){
	$el = new $name;

	if(!isset($el->config()[&#39;animation&#39;]) || $el->config()[&#39;animation&#39;] == true){
    	$settings[] = array(
        	&#39;field&#39; => &#39;select&#39;,
        	&#39;name&#39; => &#39;animation&#39;,
        	&#39;label&#39; => __(&#39;Animation type&#39;, $this->name()),
        	&#39;values&#39; => apply_filters('Smart_animation_list', array('no_animation' => __('Without animation', $this->name()))),
        	&#39;default&#39; => ''
    	);
    	$settings[] = array(
        	&#39;field&#39; => 'spiner',
        	&#39;name&#39; => 'delay',
        	&#39;label&#39; => __("Animation delay", $this->name()),
        	&#39;min&#39; => 0,
        	&#39;max&#39; => 1000,
        	&#39;default&#39; => &#39;&#39;,
        	&#39;rule&#39; => array(&#39;hide&#39; => array(&#39;animation&#39; => &#39;no_animation&#39;))
    	);
	}
        
	return $settings;
}

add_filter(&#39;Smart_settings_list&#39;, &#39;somefunction&#39;, 100, 2);
</code></pre>

<h2>Smart_animaton_list</h2>
<p>
<em>Filter</em></p>
<p>List of the animation type options for <code>Animation module</code>.</p>
<pre><code class="php">$animation_types = apply_filters('Smart_animation_list', array());
</code></pre>

<h2>Smart_shortcode_render</h2>
<p>
<em>Filter</em></p>
<p>Rendered content of registered component module.</p>
<pre><code class="php">$content = apply_filters(&#39;Smart_shortcode_render&#39;, &#39;Here goes rendered html content&#39;);
</code></pre>

<h2>Smart_field_types</h2>
<p>
<em>Filter</em></p>
<p>List of the all registered field types.</p>
<pre><code class="php">$fields = apply_filters(&#39;Smart_field_types&#39;, array());
</code></pre>

<h2>Smart_shortcode_preview</h2>
<p>
<em>Filter</em></p>
<p>Content rendered in the preview part of the component's editor pop-up window.</p>
<pre><code class="php">echo apply_filters(&#39;Smart_shortcode_preview&#39;, &#39;Here goes rendered html preview content&#39;);
</code></pre>

<h2>Smart_icon_render</h2>
<p>
<em>Filter</em></p>
<p>Icon html for settings.</p>
<pre><code class="php">$icon = apply_filters(&#39;Smart_icon_render&#39;, &#39;&#39;, $params);
</code></pre>

<h2>Smart_icon_list</h2>
<p>
<em>Filter</em></p>
<p>List of the all supported icons.</p>
<pre><code class="php">echo apply_filters(&#39;Smart_icon_list&#39;, array());
</code></pre>