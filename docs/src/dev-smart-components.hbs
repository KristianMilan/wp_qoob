---
title: Components
active_menu: Components
main_menu: dev
---

<h1>Smart Components</h1>
<p>SmartComponent allows you to create, configure and add shortcodes easily.</p>
<h2>File structure</h2>
<p>
Minimal component has next file structure</p>
<pre><code>index.php                             //Starter file
includes/SmartComponentName.class.php //Main module class `SmartComponentName`
templates/shortcode.php               //template for shortcode
</code></pre>
<h2>File</h2>
<p><code>index.php</code>
This is starter file. You shold change only <code>SmartComponentName</code> for your module/class name.</p>
<pre><code class="php">&lt;?php
/*
  Plugin Name: Component SmartComponentName for SmartBuilder
  Version: 1.0
 */

if (defined(&#39;ABSPATH&#39;)) {

    $module = &quot;SmartComponentName&quot;;
    $dependency = &quot;SmartComponents&quot;;

    //DO NOT EDIT AFTER THIS LINE
    if (class_exists(&quot;SmartUtils&quot;)) {
        eval(SmartUtils::starter($module, $dependency, realpath(dirname(__FILE__) . DIRECTORY_SEPARATOR . &quot;modules&quot;), realpath(dirname(__FILE__) . DIRECTORY_SEPARATOR . &quot;includes&quot;)));
    } else {
        $md5 = &quot;mod_&quot; . md5(rand());
        add_action(&quot;Smart_load_module&quot;, $md5);
        eval(&#39;function &#39; . $md5 . &#39;(){include(&quot;&#39; . __FILE__ . &#39;&quot;);}&#39;);
    }
}
?&gt;
</code></pre>
<h2>File includes/SmartComponentName.class.php</h2>
<p>
Each component class should have <code>config()</code> method. It describes title, type and other components parameters. Method <code>config()</code> return an array of <code>key=&gt;value</code> params.</p>
<h3>List of config keys</h3>
<table>
<thead>
<tr>
<th>key</th>
<th>type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>String</td>
<td>Title of component. Use <code>__()</code> function for localize title</td>
</tr>
<tr>
<td>icon</td>
<td>String</td>
<td>Url for icon file</td>
</tr>
<tr>
<td>category</td>
<td>Array\String</td>
<td>Category or categories</td>
</tr>
<tr>
<td>area</td>
<td>Array\String</td>
<td>Area or areas where this component might be used</td>
</tr>
<tr>
<td>settings</td>
<td>Array</td>
<td>Configurable attributes that can be used in shortcode. See more <a href="dev-smart-fields.html">Settings form fields</a></td>
</tr>
<tr>
<td>localize</td>
<td>Array</td>
<td>Component localization array</td>
</tr>
</tbody>
</table>
<h3>Example</h3>
<pre><code class="php">&lt;?php

class SmartComponentName extends SmartComponent {

    public function config() {
        return array(
            &#39;title&#39; =&gt; __(&#39;Title&#39;, &#39;name&#39;),
            &#39;icon&#39; =&gt; $this-&gt;getUrlAssets(true) . &quot;/img/icon.png&quot;,
            &#39;category&#39; =&gt; &#39;simple&#39;,
            &#39;area&#39; =&gt; &#39;pagebuilder&#39;,
            &#39;settings&#39; =&gt; array(
                array(
                    &#39;field&#39; =&gt; &#39;input&#39;,
                    &#39;name&#39; =&gt; &#39;content&#39;,
                    &#39;label&#39; =&gt; __(&#39;Text&#39;, &#39;name&#39;),
                    &#39;default&#39; =&gt; __(&#39;Default Text&#39;, &#39;text&#39;),
                ),
                array(
                    &#39;field&#39; =&gt; &#39;select&#39;,
                    &#39;name&#39; =&gt; &#39;size&#39;,
                    &#39;label&#39; =&gt; __(&#39;Size&#39;, &#39;name&#39;),
                    &#39;values&#39; =&gt; array(
                        &#39;class1&#39; =&gt; __(&#39;v1&#39;, &#39;name&#39;),
                        &#39;class2&#39; =&gt; __(&#39;v2&#39;, &#39;name&#39;),
                        &#39;class3&#39; =&gt; __(&#39;v3&#39;, &#39;name&#39;),
                        &#39;class4&#39; =&gt; __(&#39;v4&#39;, &#39;name&#39;),
                        &#39;class5&#39; =&gt; __(&#39;v5&#39;, &#39;name&#39;),
                        &#39;class6&#39; =&gt; __(&#39;v6&#39;, &#39;name&#39;)
                    ),
                    &#39;default&#39; =&gt; &#39;class1&#39;
                )
            ),
            &#39;localize&#39; =&gt; array(
                &#39;frontend&#39; =&gt; array(
                    &#39;someName&#39; =&gt; __(&#39;Some name&#39;, &#39;name&#39;)
                ),
                &#39;backend&#39; =&gt; array(
                )
            )
        );
    }

}
?&gt;
</code></pre>
<h2>File templates/shortcode.php</h2>
<p>
This file is template file for your shortcode. It means in this file we convert shortcode to html. You can use any variable from settings.</p>
<pre><code class="lang-html">&lt;div id=&quot;&lt;?php echo $id;?&gt;&quot; class=&quot;&lt;?php echo $size;?&gt;&quot;&gt;&lt;?php echo $content;?&gt;&lt;/div&gt;
</code></pre>
